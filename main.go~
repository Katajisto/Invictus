package invictus

/*
Invictus game engine. Written in go, using sdl2 bindings.

Tuomas Katajisto - t@ktj.st

*/

import (
	"time"
	"github.com/veandco/go-sdl2/sdl"
)

func main() {
	Init()
	window, renderer := WindowAndRenderer("Hello", 300,300)
	
	var event sdl.Event

	var xpos int32 = 0
	var movement int32 = 1

	isRunning := true
	
	for isRunning {

		for event = sdl.PollEvent(); event != nil; event = sdl.PollEvent() {
			switch t := event.(type) {
			case *sdl.QuitEvent:
				isRunning = false
			case *sdl.KeyboardEvent:
				if t.Keysym.Sym == sdl.K_ESCAPE {
					isRunning = false
				}
			}
		}
		
		renderer.SetDrawColor(WHITE.toi())

		renderer.Clear()

		xpos += movement

		if(xpos == 0 || xpos == 500) { movement *= -1 }
		
		dRect(renderer, xpos,0,200,200)
		
		renderer.Present()

		time.Sleep(time.Millisecond * 10)
		
	}
	
	window.Destroy()

	sdl.Quit()
}
