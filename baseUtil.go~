package invictus

import(
	"os"
	"fmt"
	"github.com/veandco/go-sdl2/sdl"
)

func Init() {
	err := sdl.Init(sdl.INIT_EVERYTHING)
	if err != nil {
		fmt.Fprintf(os.Stderr, "Failed to init: %s\n", err)
		os.Exit(1)
	}
}

var globalWindow *sdl.Window
var globalRenderer *sdl.Renderer

func WindowAndRenderer(title string, w,h int32) (*sdl.Window, *sdl.Renderer) {
	window, err := sdl.CreateWindow(title, sdl.WINDOWPOS_UNDEFINED, sdl.WINDOWPOS_UNDEFINED, w, h, sdl.WINDOW_SHOWN)
	globalWindow = window
	if err != nil {
		fmt.Fprint(os.Stderr, "Failed to create window: %s\n", err)
		os.Exit(2)
	}

	renderer, err := sdl.CreateRenderer(window, -1, sdl.RENDERER_ACCELERATED)
	globalRenderer = renderer
	
	if err != nil {
		fmt.Fprint(os.Stderr, "Failed to create renderer: %s\n", err)
		os.Exit(2)
	}

	return window, renderer
}
